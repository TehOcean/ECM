Microchip MPLAB XC8 Compiler V2.10 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.10\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\ECM.production.sym \
  --cmf=dist/default/production\ECM.production.cmf -z -Q18F4331 \
  -oC:\Users\Ossian\AppData\Local\Temp\s4bs.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/ECM.production.map -E1 -ver=XC8 --acfsm=1493 \
  -ASTACK=060h-02FFh -pstack=STACK -ACODE=00h-01FFFh -ACONST=00h-01FFFh \
  -ASMALLCONST=0300h-03FFhx29 -AMEDIUMCONST=0300h-01FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-02FFh -ABIGRAM=01h-02FFh -ARAM=060h-0FFh,0100h-01FFhx2 \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ASFR=0F60h-0FFFh -preset_vec=00h,intcode,intcodelo,powerup,init \
  -pramtop=0300h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\Ossian\AppData\Local\Temp\s4bs.o \
  dist/default/production\ECM.production.o 

Object code version is 3.11

Machine type is 18F4331

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Ossian\AppData\Local\Temp\s4bs.o
                init                                  0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\ECM.production.o
                text9                              1B6C     1B6C       26      DB6       0
                text8                              1C10     1C10       52      E08       0
                text7                              1DA2     1DA2       C4      ED1       0
                text6                              1E66     1E66      19A      F33       0
                text5                              1B92     1B92       2A      DC9       0
                text4                              1C62     1C62       82      E31       0
                text3                              1B26     1B26       22      D93       0
                text2                              1BBC     1BBC       2A      DDE       0
                text1                              1BE6     1BE6       2A      DF3       0
                text0                              1CE4     1CE4       BE      E72       0
                cstackCOMRAM                          1        1       19        1       1
                dataCOMRAM                           2C       2C        1        1       1
                bssCOMRAM                            1A       1A       12        1       1
                cinit                              1B48     1B48       24      DA4       0
                idataCOMRAM                        1B25     1B25        1     1B25       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                init                                  0        0        4         0
                text9                              1B6C     1B6C       26         0
                text8                              1C10     1C10       52         0
                text7                              1DA2     1DA2       C4         0
                text6                              1E66     1E66      19A         0
                text5                              1B92     1B92       2A         0
                text4                              1C62     1C62       82         0
                text3                              1B26     1B26       22         0
                text2                              1BBC     1BBC       2A         0
                text1                              1BE6     1BE6       2A         0
                text0                              1CE4     1CE4       BE         0
                cinit                              1B48     1B48       24         0
                idataCOMRAM                        1B25     1B25        1         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                          1        1       19         1
                dataCOMRAM                           2C       2C        1         1
                bssCOMRAM                            1A       1A       12         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00002C  00002D         1       1  COMRAM  
                idataCOMRAM                    001B25  000001  001B26      1B25       0  CODE    
                text3                          001B26  000022  001B48       D93       0  CODE    
                cinit                          001B48  000024  001B6C       DA4       0  CODE    
                text9                          001B6C  000026  001B92       DB6       0  CODE    
                text5                          001B92  00002A  001BBC       DC9       0  CODE    
                text2                          001BBC  00002A  001BE6       DDE       0  CODE    
                text1                          001BE6  00002A  001C10       DF3       0  CODE    
                text8                          001C10  000052  001C62       E08       0  CODE    
                text4                          001C62  000082  001CE4       E31       0  CODE    
                text0                          001CE4  0000BE  001DA2       E72       0  CODE    
                text7                          001DA2  0000C4  001E66       ED1       0  CODE    
                text6                          001E66  00019A  002000       F33       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000060-0000FF               A0
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BIGRAM           00002D-0002FF              2D3
        CODE             000004-001B24             1B21
        COMRAM           00002D-00005F               33
        CONST            000004-001B24             1B21
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000300-001B24             1825
        RAM              000060-0002FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       000300-001B24              100
        STACK            000060-0002FF              2A0

                                  Symbol Table

?___awdiv                cstackCOMRAM 000007
?___wmul                 cstackCOMRAM 000001
_BAUDCONbits             (abs)        000FAA
_LATAbits                (abs)        000F89
_LATB                    (abs)        000F8A
_LATBbits                (abs)        000F8A
_LATCbits                (abs)        000F8B
_LATDbits                (abs)        000F8C
_OSCCON                  (abs)        000FD3
_OSCCONbits              (abs)        000FD3
_PDC0H                   (abs)        000F78
_PDC0L                   (abs)        000F79
_PDC1H                   (abs)        000F76
_PDC1L                   (abs)        000F77
_PIR1bits                (abs)        000F9E
_PTCON0                  (abs)        000F7F
_PTCON1                  (abs)        000F7E
_PTPERH                  (abs)        000F7A
_PTPERL                  (abs)        000F7B
_PWMCON0                 (abs)        000F6F
_PWMCON1                 (abs)        000F6E
_RCREG                   (abs)        000FAE
_RCSTAbits               (abs)        000FAB
_SPBRG                   (abs)        000FAF
_SPBRGH                  (abs)        000FB0
_TRISAbits               (abs)        000F92
_TRISBbits               (abs)        000F93
_TRISCbits               (abs)        000F94
_TRISDbits               (abs)        000F95
_TXREG                   (abs)        000FAD
_TXSTAbits               (abs)        000FAC
_TurningSpeed            dataCOMRAM   00002C
__CFG_OSC$IRCIO          (abs)        000000
__HRAM                   (abs)        000000
__Habs1                  abs1         000000
__Hbank0                 bank0        000000
__Hbank1                 bank1        000000
__Hbank2                 bank2        000000
__Hbigbss                bigbss       000000
__Hbigdata               bigdata      000000
__Hbigram                bigram       000000
__Hbss                   bss          000000
__HbssCOMRAM             bssCOMRAM    000000
__Hcinit                 cinit        000000
__Hclrtext               clrtext      000000
__Hcomram                comram       000000
__Hconfig                config       30000E
__Hconst                 const        000000
__HcstackCOMRAM          cstackCOMRAM 000000
__Hdata                  data         000000
__HdataCOMRAM            dataCOMRAM   000000
__Heeprom_data           eeprom_data  000000
__Hfarbss                farbss       000000
__Hfardata               fardata      000000
__Hibigdata              ibigdata     000000
__Hidata                 idata        000000
__HidataCOMRAM           idataCOMRAM  000000
__Hidloc                 idloc        200008
__Hifardata              ifardata     000000
__Hinit                  init         000004
__Hintcode               intcode      000000
__Hintcode_body          intcode_body 000000
__Hintcodelo             intcodelo    000000
__Hintentry              intentry     000000
__Hintret                intret       000000
__Hintsave_regs          intsave_regs 000000
__Hirdata                irdata       000000
__Hmediumconst           mediumconst  000000
__HnvFARRAM              nvFARRAM     000000
__Hnvbit                 nvbit        000000
__Hnvrram                nvrram       000000
__Hparam                 rparam       000000
__Hpowerup               powerup      000000
__Hram                   ram          000000
__Hramtop                ramtop       000300
__Hrbit                  rbit         000000
__Hrbss                  rbss         000000
__Hrdata                 rdata        000000
__Hreset_vec             reset_vec    000000
__Hrparam                rparam       000000
__Hsfr                   sfr          000000
__Hsmallconst            smallconst   000000
__Hspace_0               (abs)        30000E
__Hspace_1               (abs)        00002D
__Hspace_2               (abs)        000000
__Hstack                 stack        000000
__Hstruct                struct       000000
__Htemp                  temp         000000
__Htext                  text         000000
__Htext0                 text0        000000
__Htext1                 text1        000000
__Htext2                 text2        000000
__Htext3                 text3        000000
__Htext4                 text4        000000
__Htext5                 text5        000000
__Htext6                 text6        000000
__Htext7                 text7        000000
__Htext8                 text8        000000
__Htext9                 text9        000000
__LRAM                   (abs)        000001
__Labs1                  abs1         000000
__Lbank0                 bank0        000000
__Lbank1                 bank1        000000
__Lbank2                 bank2        000000
__Lbigbss                bigbss       000000
__Lbigdata               bigdata      000000
__Lbigram                bigram       000000
__Lbss                   bss          000000
__LbssCOMRAM             bssCOMRAM    000000
__Lcinit                 cinit        000000
__Lclrtext               clrtext      000000
__Lcomram                comram       000000
__Lconfig                config       300000
__Lconst                 const        000000
__LcstackCOMRAM          cstackCOMRAM 000000
__Ldata                  data         000000
__LdataCOMRAM            dataCOMRAM   000000
__Leeprom_data           eeprom_data  000000
__Lfarbss                farbss       000000
__Lfardata               fardata      000000
__Libigdata              ibigdata     000000
__Lidata                 idata        000000
__LidataCOMRAM           idataCOMRAM  000000
__Lidloc                 idloc        200000
__Lifardata              ifardata     000000
__Linit                  init         000000
__Lintcode               intcode      000000
__Lintcode_body          intcode_body 000000
__Lintcodelo             intcodelo    000000
__Lintentry              intentry     000000
__Lintret                intret       000000
__Lintsave_regs          intsave_regs 000000
__Lirdata                irdata       000000
__Lmediumconst           mediumconst  000000
__LnvFARRAM              nvFARRAM     000000
__Lnvbit                 nvbit        000000
__Lnvrram                nvrram       000000
__Lparam                 rparam       000000
__Lpowerup               powerup      000000
__Lram                   ram          000000
__Lramtop                ramtop       000300
__Lrbit                  rbit         000000
__Lrbss                  rbss         000000
__Lrdata                 rdata        000000
__Lreset_vec             reset_vec    000000
__Lrparam                rparam       000000
__Lsfr                   sfr          000000
__Lsmallconst            smallconst   000000
__Lspace_0               (abs)        000000
__Lspace_1               (abs)        000000
__Lspace_2               (abs)        000000
__Lstack                 stack        000000
__Lstruct                struct       000000
__Ltemp                  temp         000000
__Ltext                  text         000000
__Ltext0                 text0        000000
__Ltext1                 text1        000000
__Ltext2                 text2        000000
__Ltext3                 text3        000000
__Ltext4                 text4        000000
__Ltext5                 text5        000000
__Ltext6                 text6        000000
__Ltext7                 text7        000000
__Ltext8                 text8        000000
__Ltext9                 text9        000000
__S0                     (abs)        30000E
__S1                     (abs)        00002D
__S2                     (abs)        000000
___awdiv                 text7        001DA2
___awdiv@counter         cstackCOMRAM 00000B
___awdiv@dividend        cstackCOMRAM 000007
___awdiv@divisor         cstackCOMRAM 000009
___awdiv@quotient        cstackCOMRAM 00000D
___awdiv@sign            cstackCOMRAM 00000C
___inthi_sp              stack        000000
___intlo_sp              stack        000000
___param_bank            (abs)        000000
___rparam_used           (abs)        000001
___sp                    stack        000000
___wmul                  text9        001B6C
___wmul@multiplicand     cstackCOMRAM 000003
___wmul@multiplier       cstackCOMRAM 000001
___wmul@product          cstackCOMRAM 000005
__accesstop              (abs)        000060
__activetblptr           (abs)        000000
__end_of___awdiv         text7        001E66
__end_of___wmul          text9        001B92
__end_of__initialization cinit        001B66
__end_of_delay_s         text8        001C62
__end_of_fullSpeedAhead  text5        001BBC
__end_of_initMotor       text4        001CE4
__end_of_main            text0        001DA2
__end_of_setMotorPWM     text6        002000
__end_of_stop            text3        001B48
__end_of_turnLeft        text2        001BE6
__end_of_turnRight       text1        001C10
__initialization         cinit        001B48
__mediumconst            mediumconst  000000
__pbssCOMRAM             bssCOMRAM    00001A
__pcinit                 cinit        001B48
__pcstackCOMRAM          cstackCOMRAM 000001
__pdataCOMRAM            dataCOMRAM   00002C
__pidataCOMRAM           idataCOMRAM  001B25
__ptext0                 text0        001CE4
__ptext1                 text1        001BE6
__ptext2                 text2        001BBC
__ptext3                 text3        001B26
__ptext4                 text4        001C62
__ptext5                 text5        001B92
__ptext6                 text6        001E66
__ptext7                 text7        001DA2
__ptext8                 text8        001C10
__ptext9                 text9        001B6C
__ramtop                 ramtop       000300
__size_of___awdiv        (abs)        000000
__size_of___wmul         (abs)        000000
__size_of_delay_s        (abs)        000000
__size_of_fullSpeedAhead (abs)        000000
__size_of_initMotor      (abs)        000000
__size_of_main           (abs)        000000
__size_of_setMotorPWM    (abs)        000000
__size_of_stop           (abs)        000000
__size_of_turnLeft       (abs)        000000
__size_of_turnRight      (abs)        000000
__smallconst             smallconst   000000
_delay_s                 text8        001C10
_fullSpeedAhead          text5        001B92
_initMotor               text4        001C62
_main                    text0        001CE4
_motorL                  bssCOMRAM    000023
_motorR                  bssCOMRAM    00001A
_setMotorPWM             text6        001E66
_stop                    text3        001B26
_turnLeft                text2        001BBC
_turnRight               text1        001BE6
delay_s@i                cstackCOMRAM 00000A
delay_s@j                cstackCOMRAM 00000C
delay_s@seconds          cstackCOMRAM 000007
end_of_initialization    cinit        001B66
fullSpeedAhead@m_L       cstackCOMRAM 000016
fullSpeedAhead@m_R       cstackCOMRAM 000018
intlevel0                text         000000
intlevel1                text         000000
intlevel2                text         000000
intlevel3                text         000000
setMotorPWM@PWMduty      cstackCOMRAM 000014
setMotorPWM@m            cstackCOMRAM 00000F
stackhi                  (abs)        0002FF
stacklo                  (abs)        000060
start                    init         000000
start_initialization     cinit        001B48
stop@m_L                 cstackCOMRAM 000016
stop@m_R                 cstackCOMRAM 000018
turnLeft@m_L             cstackCOMRAM 000016
turnLeft@m_R             cstackCOMRAM 000018
turnRight@m_L            cstackCOMRAM 000016
turnRight@m_R            cstackCOMRAM 000018


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 6 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    3
 This function calls:
		_delay_s
		_fullSpeedAhead
		_initMotor
		_stop
		_turnLeft
		_turnRight
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _turnRight *****************
 Defined at:
		line 80 in file "motor.c"
 Parameters:    Size  Location     Type
  m_L             2   21[COMRAM] PTR struct DC_motor
		 -> motorL(9), 
  m_R             2   23[COMRAM] PTR struct DC_motor
		 -> motorR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _turnLeft *****************
 Defined at:
		line 70 in file "motor.c"
 Parameters:    Size  Location     Type
  m_L             2   21[COMRAM] PTR struct DC_motor
		 -> motorL(9), 
  m_R             2   23[COMRAM] PTR struct DC_motor
		 -> motorR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _stop *****************
 Defined at:
		line 61 in file "motor.c"
 Parameters:    Size  Location     Type
  m_L             2   21[COMRAM] PTR struct DC_motor
		 -> motorL(9), 
  m_R             2   23[COMRAM] PTR struct DC_motor
		 -> motorR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initMotor *****************
 Defined at:
		line 4 in file "motor.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  PWMcycle        2    0        int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _fullSpeedAhead *****************
 Defined at:
		line 90 in file "motor.c"
 Parameters:    Size  Location     Type
  m_L             2   21[COMRAM] PTR struct DC_motor
		 -> motorL(9), 
  m_R             2   23[COMRAM] PTR struct DC_motor
		 -> motorR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setMotorPWM *****************
 Defined at:
		line 41 in file "motor.c"
 Parameters:    Size  Location     Type
  m               2   14[COMRAM] PTR struct DC_motor
		 -> motorR(9), motorL(9), 
 Auto vars:     Size  Location     Type
  PWMduty         2   19[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          3       0       0       0
      Totals:         7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___awdiv
		___wmul
 This function is called by:
		_stop
		_turnLeft
		_turnRight
		_fullSpeedAhead
		_setMotorFullSpeed
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    6[COMRAM] int 
  divisor         2    8[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2   12[COMRAM] int 
  sign            1   11[COMRAM] unsigned char 
  counter         1   10[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    6[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         4       0       0       0
      Temps:          0       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
 This function uses a non-reentrant model


 *************** function _delay_s *****************
 Defined at:
		line 107 in file "motor.c"
 Parameters:    Size  Location     Type
  seconds         2    6[COMRAM] int 
 Auto vars:     Size  Location     Type
  j               2   11[COMRAM] unsigned int 
  i               2    9[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         4       0       0       0
      Temps:          1       0       0       0
      Totals:         7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___wmul
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[COMRAM] unsigned int 
  multiplicand    2    2[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    4[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
		_delay_s
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c
		___awdiv       		CODE           	1DA2	0000	197

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c estimated size: 197

motor.c
		_fullSpeedAhead		CODE           	1B92	0000	43
		_turnLeft      		CODE           	1BBC	0000	43
		_stop          		CODE           	1B26	0000	35
		_turnRight     		CODE           	1BE6	0000	43
		_initMotor     		CODE           	1C62	0000	131
		_setMotorPWM   		CODE           	1E66	0000	411
		_delay_s       		CODE           	1C10	0000	83

motor.c estimated size: 789

shared
		__initialization		CODE           	1B48	0000	31

shared estimated size: 31

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c
		___wmul        		CODE           	1B6C	0000	39

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c estimated size: 39

main.c
		_main          		CODE           	1CE4	0000	191

main.c estimated size: 191

