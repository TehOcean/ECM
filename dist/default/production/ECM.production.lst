

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Nov 28 10:58:25 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4331
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4331 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	idataCOMRAM
    55  0001AE                     __pidataCOMRAM:
    56                           	opt callstack 0
    57                           
    58                           ;initializer for _TurningSpeed
    59  0001AE  4B                 	db	75
    60  0000                     _TMR1	set	4046
    61  0000                     _LATD	set	3980
    62  0000                     _LATC	set	3979
    63  0000                     _T1CONbits	set	4045
    64  0000                     _INTCON2bits	set	4081
    65  0000                     _CCP2CONbits	set	4026
    66  0000                     _CCP1CONbits	set	4029
    67  0000                     _PIE1bits	set	3997
    68  0000                     _RCONbits	set	4048
    69  0000                     _OSCCONbits	set	4051
    70  0000                     _OSCCON	set	4051
    71  0000                     _CCPR1H	set	4031
    72  0000                     _CCPR1L	set	4030
    73  0000                     _INTCONbits	set	4082
    74  0000                     _RCSTAbits	set	4011
    75  0000                     _TXSTAbits	set	4012
    76  0000                     _BAUDCONbits	set	4010
    77  0000                     _SPBRGH	set	4016
    78  0000                     _SPBRG	set	4015
    79  0000                     _TXREG	set	4013
    80  0000                     _RCREG	set	4014
    81  0000                     _PIR1bits	set	3998
    82  0000                     _LATB	set	3978
    83  0000                     _PTPERH	set	3962
    84  0000                     _PTPERL	set	3963
    85  0000                     _PWMCON1	set	3950
    86  0000                     _PWMCON0	set	3951
    87  0000                     _PTCON1	set	3966
    88  0000                     _PTCON0	set	3967
    89  0000                     _LATBbits	set	3978
    90  0000                     _TRISBbits	set	3987
    91  0000                     _TRISDbits	set	3989
    92  0000                     _TRISCbits	set	3988
    93  0000                     _TRISAbits	set	3986
    94  0000                     _LATAbits	set	3977
    95  0000                     _LATDbits	set	3980
    96  0000                     _LATCbits	set	3979
    97  0000                     _PDC1H	set	3958
    98  0000                     _PDC1L	set	3959
    99  0000                     _PDC0H	set	3960
   100  0000                     _PDC0L	set	3961
   101                           
   102                           ; #config settings
   103  0000                     
   104                           	psect	cinit
   105  000164                     __pcinit:
   106                           	opt callstack 0
   107  000164                     start_initialization:
   108                           	opt callstack 0
   109  000164                     __initialization:
   110                           	opt callstack 0
   111                           
   112                           ; Initialize objects allocated to COMRAM (1 bytes)
   113                           ; load TBLPTR registers with __pidataCOMRAM
   114  000164  0EAE               	movlw	low __pidataCOMRAM
   115  000166  6EF6               	movwf	tblptrl,c
   116  000168  0E01               	movlw	high __pidataCOMRAM
   117  00016A  6EF7               	movwf	tblptrh,c
   118  00016C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   119  00016E  6EF8               	movwf	tblptru,c
   120  000170  0009               	tblrd		*+	;fetch initializer
   121  000172  CFF5 F026          	movff	tablat,__pdataCOMRAM
   122                           
   123                           ; Clear objects allocated to COMRAM (22 bytes)
   124  000176  EE00  F001         	lfsr	0,__pbssCOMRAM
   125  00017A  0E16               	movlw	22
   126  00017C                     clear_0:
   127  00017C  6AEE               	clrf	postinc0,c
   128  00017E  06E8               	decf	wreg,f,c
   129  000180  E1FD               	bnz	clear_0
   130  000182                     end_of_initialization:
   131                           	opt callstack 0
   132  000182                     __end_of__initialization:
   133                           	opt callstack 0
   134  000182  9027               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   135  000184  9227               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   136  000186  0100               	movlb	0
   137  000188  EF45  F000         	goto	_main	;jump to C main() function
   138                           
   139                           	psect	bssCOMRAM
   140  000001                     __pbssCOMRAM:
   141                           	opt callstack 0
   142  000001                     _left:
   143                           	opt callstack 0
   144  000001                     	ds	2
   145  000003                     _right:
   146                           	opt callstack 0
   147  000003                     	ds	2
   148  000005                     _motorR:
   149                           	opt callstack 0
   150  000005                     	ds	9
   151  00000E                     _motorL:
   152                           	opt callstack 0
   153  00000E                     	ds	9
   154                           
   155                           	psect	dataCOMRAM
   156  000026                     __pdataCOMRAM:
   157                           	opt callstack 0
   158  000026                     _TurningSpeed:
   159                           	opt callstack 0
   160  000026                     	ds	1
   161                           
   162                           	psect	cstackCOMRAM
   163  000017                     __pcstackCOMRAM:
   164                           	opt callstack 0
   165  000017                     i1LEDout@number:
   166                           	opt callstack 0
   167                           
   168                           ; 2 bytes @ 0x0
   169  000017                     	ds	2
   170  000019                     ??i1_LEDout:
   171                           
   172                           ; 1 bytes @ 0x2
   173  000019                     	ds	3
   174  00001C                     ??_InterruptHandlerLow:
   175                           
   176                           ; 1 bytes @ 0x5
   177  00001C                     	ds	5
   178  000021                     LEDout@number:
   179                           	opt callstack 0
   180                           
   181                           ; 2 bytes @ 0xA
   182  000021                     	ds	2
   183  000023                     ??_LEDout:
   184                           
   185                           ; 1 bytes @ 0xC
   186  000023                     	ds	3
   187  000026                     
   188                           ; 1 bytes @ 0xF
   189 ;;
   190 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   191 ;;
   192 ;; *************** function _main *****************
   193 ;; Defined at:
   194 ;;		line 42 in file "main.c"
   195 ;; Parameters:    Size  Location     Type
   196 ;;		None
   197 ;; Auto vars:     Size  Location     Type
   198 ;;		None
   199 ;; Return value:  Size  Location     Type
   200 ;;                  1    wreg      void 
   201 ;; Registers used:
   202 ;;		wreg, status,2, status,0, cstack
   203 ;; Tracked objects:
   204 ;;		On entry : 0/0
   205 ;;		On exit  : 0/0
   206 ;;		Unchanged: 0/0
   207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   208 ;;      Params:         0       0       0       0
   209 ;;      Locals:         0       0       0       0
   210 ;;      Temps:          0       0       0       0
   211 ;;      Totals:         0       0       0       0
   212 ;;Total ram usage:        0 bytes
   213 ;; Hardware stack levels required when called:    3
   214 ;; This function calls:
   215 ;;		_LEDInit
   216 ;;		_LEDout
   217 ;; This function is called by:
   218 ;;		Startup code after reset
   219 ;; This function uses a non-reentrant model
   220 ;;
   221                           
   222                           	psect	text0
   223  00008A                     __ptext0:
   224                           	opt callstack 0
   225  00008A                     _main:
   226                           	opt callstack 28
   227  00008A                     
   228                           ;main.c: 43:     OSCCON = 0x72;
   229  00008A  0E72               	movlw	114
   230  00008C  6ED3               	movwf	211,c	;volatile
   231  00008E                     l203:
   232  00008E  A4D3               	btfss	211,2,c	;volatile
   233  000090  EF4C  F000         	goto	u181
   234  000094  EF4E  F000         	goto	u180
   235  000098                     u181:
   236  000098  EF47  F000         	goto	l203
   237  00009C                     u180:
   238  00009C                     
   239                           ;main.c: 49:     INTCONbits.GIEH = 1;
   240  00009C  8EF2               	bsf	242,7,c	;volatile
   241                           
   242                           ;main.c: 50:     INTCONbits.GIEL = 1;
   243  00009E  8CF2               	bsf	242,6,c	;volatile
   244                           
   245                           ;main.c: 51:     RCONbits.IPEN = 1;
   246  0000A0  8ED0               	bsf	208,7,c	;volatile
   247                           
   248                           ;main.c: 52:     PIE1bits.RCIE = 1;
   249  0000A2  8A9D               	bsf	157,5,c	;volatile
   250                           
   251                           ;main.c: 54:     TRISCbits.RC1 = 1;
   252  0000A4  8294               	bsf	148,1,c	;volatile
   253                           
   254                           ;main.c: 55:     TRISCbits.RC2 = 1;
   255  0000A6  8494               	bsf	148,2,c	;volatile
   256                           
   257                           ;main.c: 56:     TRISCbits.RC3 = 1;
   258  0000A8  8694               	bsf	148,3,c	;volatile
   259                           
   260                           ;main.c: 57:     CCP1CONbits.CCP1M3 = 0;
   261  0000AA  96BD               	bcf	189,3,c	;volatile
   262                           
   263                           ;main.c: 58:     CCP1CONbits.CCP1M2 = 1;
   264  0000AC  84BD               	bsf	189,2,c	;volatile
   265                           
   266                           ;main.c: 59:     CCP1CONbits.CCP1M1 = 0;
   267  0000AE  92BD               	bcf	189,1,c	;volatile
   268                           
   269                           ;main.c: 60:     CCP1CONbits.CCP1M0 = 1;
   270  0000B0  80BD               	bsf	189,0,c	;volatile
   271                           
   272                           ;main.c: 62:     CCP2CONbits.CCP2M3 = 0;
   273  0000B2  96BA               	bcf	186,3,c	;volatile
   274                           
   275                           ;main.c: 63:     CCP2CONbits.CCP2M2 = 1;
   276  0000B4  84BA               	bsf	186,2,c	;volatile
   277                           
   278                           ;main.c: 64:     CCP2CONbits.CCP2M1 = 0;
   279  0000B6  92BA               	bcf	186,1,c	;volatile
   280                           
   281                           ;main.c: 65:     CCP2CONbits.CCP2M0 = 1;
   282  0000B8  80BA               	bsf	186,0,c	;volatile
   283  0000BA                     
   284                           ;main.c: 66:     LEDInit();
   285  0000BA  ECC6  F000         	call	_LEDInit	;wreg free
   286  0000BE                     
   287                           ;main.c: 68:     INTCONbits.INT0IE = 1;
   288  0000BE  88F2               	bsf	242,4,c	;volatile
   289  0000C0                     
   290                           ;main.c: 69:     INTCON2bits.INTEDG0 = 0;
   291  0000C0  9CF1               	bcf	241,6,c	;volatile
   292  0000C2                     
   293                           ;main.c: 71:     T1CONbits.TMR1ON = 1;
   294  0000C2  80CD               	bsf	205,0,c	;volatile
   295  0000C4                     
   296                           ;main.c: 72:     T1CONbits.RD16 = 1;
   297  0000C4  8ECD               	bsf	205,7,c	;volatile
   298  0000C6                     
   299                           ;main.c: 73:     T1CONbits.TMR1CS = 0;
   300  0000C6  92CD               	bcf	205,1,c	;volatile
   301  0000C8                     
   302                           ;main.c: 74:     T1CONbits.T1OSCEN = 0;
   303  0000C8  96CD               	bcf	205,3,c	;volatile
   304  0000CA                     
   305                           ;main.c: 75:     T1CONbits.T1CKPS0 = 1;
   306  0000CA  88CD               	bsf	205,4,c	;volatile
   307  0000CC                     
   308                           ;main.c: 76:     T1CONbits.T1CKPS1 = 1;
   309  0000CC  8ACD               	bsf	205,5,c	;volatile
   310  0000CE                     
   311                           ;main.c: 77:     T1CONbits.T1RUN=1;
   312  0000CE  8CCD               	bsf	205,6,c	;volatile
   313  0000D0                     
   314                           ;main.c: 85: LEDout(84);
   315  0000D0  0E00               	movlw	0
   316  0000D2  6E22               	movwf	(LEDout@number+1)^0,c
   317  0000D4  0E54               	movlw	84
   318  0000D6  6E21               	movwf	LEDout@number^0,c
   319  0000D8  EC72  F000         	call	_LEDout	;wreg free
   320  0000DC                     l206:
   321  0000DC  EF6E  F000         	goto	l206
   322  0000E0  EF43  F000         	goto	start
   323  0000E4                     __end_of_main:
   324                           	opt callstack 0
   325                           
   326 ;; *************** function _LEDout *****************
   327 ;; Defined at:
   328 ;;		line 4 in file "led.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;  number          2   10[COMRAM] int 
   331 ;; Auto vars:     Size  Location     Type
   332 ;;		None
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, status,2, status,0
   337 ;; Tracked objects:
   338 ;;		On entry : 0/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   342 ;;      Params:         2       0       0       0
   343 ;;      Locals:         0       0       0       0
   344 ;;      Temps:          3       0       0       0
   345 ;;      Totals:         5       0       0       0
   346 ;;Total ram usage:        5 bytes
   347 ;; Hardware stack levels used:    1
   348 ;; Hardware stack levels required when called:    2
   349 ;; This function calls:
   350 ;;		Nothing
   351 ;; This function is called by:
   352 ;;		_main
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           	psect	text1
   357  0000E4                     __ptext1:
   358                           	opt callstack 0
   359  0000E4                     _LEDout:
   360                           	opt callstack 28
   361  0000E4                     
   362                           ;led.c: 13:     LATC = (number & 0b00111100) << 2;
   363  0000E4  C021  F023         	movff	LEDout@number,??_LEDout
   364  0000E8  0E3C               	movlw	60
   365  0000EA  1623               	andwf	??_LEDout^0,f,c
   366  0000EC  90D8               	bcf	status,0,c
   367  0000EE  3623               	rlcf	??_LEDout^0,f,c
   368  0000F0  90D8               	bcf	status,0,c
   369  0000F2  3423               	rlcf	??_LEDout^0,w,c
   370  0000F4  6E8B               	movwf	139,c	;volatile
   371                           
   372                           ;led.c: 14:     LATD = ((number & 0b00000011) << 2) | ((number & 0b11000000) >> 2);
   373  0000F6  C021  F023         	movff	LEDout@number,??_LEDout
   374  0000FA  C022  F024         	movff	LEDout@number+1,??_LEDout+1
   375  0000FE  3424               	rlcf	(??_LEDout+1)^0,w,c
   376  000100  3224               	rrcf	(??_LEDout+1)^0,f,c
   377  000102  3223               	rrcf	??_LEDout^0,f,c
   378  000104  3424               	rlcf	(??_LEDout+1)^0,w,c
   379  000106  3224               	rrcf	(??_LEDout+1)^0,f,c
   380  000108  3223               	rrcf	??_LEDout^0,f,c
   381  00010A  0E30               	movlw	48
   382  00010C  1623               	andwf	??_LEDout^0,f,c
   383  00010E  C021  F025         	movff	LEDout@number,??_LEDout+2
   384  000112  0E03               	movlw	3
   385  000114  1625               	andwf	(??_LEDout+2)^0,f,c
   386  000116  90D8               	bcf	status,0,c
   387  000118  3625               	rlcf	(??_LEDout+2)^0,f,c
   388  00011A  90D8               	bcf	status,0,c
   389  00011C  3425               	rlcf	(??_LEDout+2)^0,w,c
   390  00011E  1023               	iorwf	??_LEDout^0,w,c
   391  000120  6E8C               	movwf	140,c	;volatile
   392  000122  0012               	return		;funcret
   393  000124                     __end_of_LEDout:
   394                           	opt callstack 0
   395                           
   396 ;; *************** function _LEDInit *****************
   397 ;; Defined at:
   398 ;;		line 17 in file "led.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;		None
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		None
   407 ;; Tracked objects:
   408 ;;		On entry : 0/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   412 ;;      Params:         0       0       0       0
   413 ;;      Locals:         0       0       0       0
   414 ;;      Temps:          0       0       0       0
   415 ;;      Totals:         0       0       0       0
   416 ;;Total ram usage:        0 bytes
   417 ;; Hardware stack levels used:    1
   418 ;; Hardware stack levels required when called:    2
   419 ;; This function calls:
   420 ;;		Nothing
   421 ;; This function is called by:
   422 ;;		_main
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           	psect	text2
   427  00018C                     __ptext2:
   428                           	opt callstack 0
   429  00018C                     _LEDInit:
   430                           	opt callstack 28
   431  00018C                     
   432                           ;led.c: 18:     LATDbits.LATD2 = 0;
   433  00018C  948C               	bcf	140,2,c	;volatile
   434                           
   435                           ;led.c: 19:     LATDbits.LATD3 = 0;
   436  00018E  968C               	bcf	140,3,c	;volatile
   437                           
   438                           ;led.c: 20:     LATCbits.LATC4 = 0;
   439  000190  988B               	bcf	139,4,c	;volatile
   440                           
   441                           ;led.c: 21:     LATCbits.LATC5 = 0;
   442  000192  9A8B               	bcf	139,5,c	;volatile
   443                           
   444                           ;led.c: 22:     LATCbits.LATC6 = 0;
   445  000194  9C8B               	bcf	139,6,c	;volatile
   446                           
   447                           ;led.c: 23:     LATCbits.LATC7 = 0;
   448  000196  9E8B               	bcf	139,7,c	;volatile
   449                           
   450                           ;led.c: 24:     LATDbits.LATD4 = 0;
   451  000198  988C               	bcf	140,4,c	;volatile
   452                           
   453                           ;led.c: 25:     LATDbits.LATD5 = 0;
   454  00019A  9A8C               	bcf	140,5,c	;volatile
   455                           
   456                           ;led.c: 26:     TRISDbits.RD2 = 0;
   457  00019C  9495               	bcf	149,2,c	;volatile
   458                           
   459                           ;led.c: 27:     TRISDbits.RD3 = 0;
   460  00019E  9695               	bcf	149,3,c	;volatile
   461                           
   462                           ;led.c: 28:     TRISDbits.RD4 = 0;
   463  0001A0  9895               	bcf	149,4,c	;volatile
   464                           
   465                           ;led.c: 29:     TRISDbits.RD5 = 0;
   466  0001A2  9A95               	bcf	149,5,c	;volatile
   467                           
   468                           ;led.c: 30:     TRISCbits.RC4 = 0;
   469  0001A4  9894               	bcf	148,4,c	;volatile
   470                           
   471                           ;led.c: 31:     TRISCbits.RC5 = 0;
   472  0001A6  9A94               	bcf	148,5,c	;volatile
   473                           
   474                           ;led.c: 32:     TRISCbits.RC6 = 0;
   475  0001A8  9C94               	bcf	148,6,c	;volatile
   476                           
   477                           ;led.c: 33:     TRISCbits.RC7 = 0;
   478  0001AA  9E94               	bcf	148,7,c	;volatile
   479  0001AC  0012               	return		;funcret
   480  0001AE                     __end_of_LEDInit:
   481                           	opt callstack 0
   482                           
   483 ;; *************** function _InterruptHandlerLow *****************
   484 ;; Defined at:
   485 ;;		line 21 in file "main.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, status,2, status,0, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   499 ;;      Params:         0       0       0       0
   500 ;;      Locals:         0       0       0       0
   501 ;;      Temps:          5       0       0       0
   502 ;;      Totals:         5       0       0       0
   503 ;;Total ram usage:        5 bytes
   504 ;; Hardware stack levels used:    1
   505 ;; Hardware stack levels required when called:    1
   506 ;; This function calls:
   507 ;;		i1_LEDout
   508 ;; This function is called by:
   509 ;;		Interrupt level 1
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	intcodelo
   514  000018                     __pintcodelo:
   515                           	opt callstack 0
   516  000018                     _InterruptHandlerLow:
   517                           	opt callstack 28
   518                           
   519                           ;incstack = 0
   520  000018  8027               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   521  00001A  CFD8 F01E          	movff	status,??_InterruptHandlerLow+2
   522  00001E  CFE8 F01F          	movff	wreg,??_InterruptHandlerLow+3
   523  000022  CFE0 F020          	movff	bsr,??_InterruptHandlerLow+4
   524  000026                     
   525                           ;main.c: 22:     if (INTCONbits.INT0IF == 1) {
   526  000026  A2F2               	btfss	242,1,c	;volatile
   527  000028  EF18  F000         	goto	i1u16_21
   528  00002C  EF1A  F000         	goto	i1u16_20
   529  000030                     i1u16_21:
   530  000030  EF3B  F000         	goto	i1l198
   531  000034                     i1u16_20:
   532  000034                     
   533                           ;main.c: 23:         TMR1 = 0;
   534  000034  0E00               	movlw	0
   535  000036  6ECF               	movwf	207,c	;volatile
   536  000038  0E00               	movlw	0
   537  00003A  6ECE               	movwf	206,c	;volatile
   538  00003C                     
   539                           ;main.c: 24:         LEDout(2);
   540  00003C  0E00               	movlw	0
   541  00003E  6E18               	movwf	(i1LEDout@number+1)^0,c
   542  000040  0E02               	movlw	2
   543  000042  6E17               	movwf	i1LEDout@number^0,c
   544  000044  EC92  F000         	call	i1_LEDout	;wreg free
   545  000048                     
   546                           ;main.c: 25:         INTCONbits.INT0IF = 0;
   547  000048  92F2               	bcf	242,1,c	;volatile
   548  00004A                     
   549                           ;main.c: 29:         if (PIR1bits.CCP1IF == 1) {
   550  00004A  A49E               	btfss	158,2,c	;volatile
   551  00004C  EF2A  F000         	goto	i1u17_21
   552  000050  EF2C  F000         	goto	i1u17_20
   553  000054                     i1u17_21:
   554  000054  EF3B  F000         	goto	i1l198
   555  000058                     i1u17_20:
   556  000058                     
   557                           ;main.c: 30:             left=CCPR1L + (CCPR1H << 8);
   558  000058  50BF               	movf	191,w,c	;volatile
   559  00005A  6E1D               	movwf	(??_InterruptHandlerLow+1)^0,c
   560  00005C  6A1C               	clrf	??_InterruptHandlerLow^0,c
   561  00005E  50BE               	movf	190,w,c	;volatile
   562  000060  241C               	addwf	??_InterruptHandlerLow^0,w,c
   563  000062  6E01               	movwf	_left^0,c	;volatile
   564  000064  0E00               	movlw	0
   565  000066  201D               	addwfc	(??_InterruptHandlerLow+1)^0,w,c
   566  000068  6E02               	movwf	(_left+1)^0,c	;volatile
   567  00006A                     
   568                           ;main.c: 31:             PIR1bits.CCP1IF = 0;
   569  00006A  949E               	bcf	158,2,c	;volatile
   570  00006C                     
   571                           ;main.c: 32:             LEDout(CCPR1H);
   572  00006C  CFBF F017          	movff	4031,i1LEDout@number	;volatile
   573  000070  6A18               	clrf	(i1LEDout@number+1)^0,c
   574  000072  EC92  F000         	call	i1_LEDout	;wreg free
   575  000076                     i1l198:
   576  000076  C020  FFE0         	movff	??_InterruptHandlerLow+4,bsr
   577  00007A  C01F  FFE8         	movff	??_InterruptHandlerLow+3,wreg
   578  00007E  C01E  FFD8         	movff	??_InterruptHandlerLow+2,status
   579  000082  9027               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   580  000084  0010               	retfie	
   581  000086                     __end_of_InterruptHandlerLow:
   582                           	opt callstack 0
   583                           
   584 ;; *************** function i1_LEDout *****************
   585 ;; Defined at:
   586 ;;		line 4 in file "led.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;  number          2    0[COMRAM] int 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   600 ;;      Params:         2       0       0       0
   601 ;;      Locals:         0       0       0       0
   602 ;;      Temps:          3       0       0       0
   603 ;;      Totals:         5       0       0       0
   604 ;;Total ram usage:        5 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; This function calls:
   607 ;;		Nothing
   608 ;; This function is called by:
   609 ;;		_InterruptHandlerLow
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text4
   614  000124                     __ptext4:
   615                           	opt callstack 0
   616  000124                     i1_LEDout:
   617                           	opt callstack 28
   618  000124                     
   619                           ;led.c: 13:     LATC = (number & 0b00111100) << 2;
   620  000124  C017  F019         	movff	i1LEDout@number,??i1_LEDout
   621  000128  0E3C               	movlw	60
   622  00012A  1619               	andwf	??i1_LEDout^0,f,c
   623  00012C  90D8               	bcf	status,0,c
   624  00012E  3619               	rlcf	??i1_LEDout^0,f,c
   625  000130  90D8               	bcf	status,0,c
   626  000132  3419               	rlcf	??i1_LEDout^0,w,c
   627  000134  6E8B               	movwf	139,c	;volatile
   628                           
   629                           ;led.c: 14:     LATD = ((number & 0b00000011) << 2) | ((number & 0b11000000) >> 2);
   630  000136  C017  F019         	movff	i1LEDout@number,??i1_LEDout
   631  00013A  C018  F01A         	movff	i1LEDout@number+1,??i1_LEDout+1
   632  00013E  341A               	rlcf	(??i1_LEDout+1)^0,w,c
   633  000140  321A               	rrcf	(??i1_LEDout+1)^0,f,c
   634  000142  3219               	rrcf	??i1_LEDout^0,f,c
   635  000144  341A               	rlcf	(??i1_LEDout+1)^0,w,c
   636  000146  321A               	rrcf	(??i1_LEDout+1)^0,f,c
   637  000148  3219               	rrcf	??i1_LEDout^0,f,c
   638  00014A  0E30               	movlw	48
   639  00014C  1619               	andwf	??i1_LEDout^0,f,c
   640  00014E  C017  F01B         	movff	i1LEDout@number,??i1_LEDout+2
   641  000152  0E03               	movlw	3
   642  000154  161B               	andwf	(??i1_LEDout+2)^0,f,c
   643  000156  90D8               	bcf	status,0,c
   644  000158  361B               	rlcf	(??i1_LEDout+2)^0,f,c
   645  00015A  90D8               	bcf	status,0,c
   646  00015C  341B               	rlcf	(??i1_LEDout+2)^0,w,c
   647  00015E  1019               	iorwf	??i1_LEDout^0,w,c
   648  000160  6E8C               	movwf	140,c	;volatile
   649  000162  0012               	return		;funcret
   650  000164                     __end_ofi1_LEDout:
   651                           	opt callstack 0
   652  0000                     
   653                           	psect	rparam
   654  0000                     
   655                           	psect	temp
   656  000027                     btemp:
   657                           	opt callstack 0
   658  000027                     	ds	1
   659  0000                     int$flags	set	btemp
   660  0000                     wtemp8	set	btemp+1
   661  0000                     ttemp5	set	btemp+1
   662  0000                     ttemp6	set	btemp+4
   663  0000                     ttemp7	set	btemp+8
   664                           tosu	equ	0xFFF
   665                           tosh	equ	0xFFE
   666                           tosl	equ	0xFFD
   667                           stkptr	equ	0xFFC
   668                           pclatu	equ	0xFFB
   669                           pclath	equ	0xFFA
   670                           pcl	equ	0xFF9
   671                           tblptru	equ	0xFF8
   672                           tblptrh	equ	0xFF7
   673                           tblptrl	equ	0xFF6
   674                           tablat	equ	0xFF5
   675                           prodh	equ	0xFF4
   676                           prodl	equ	0xFF3
   677                           indf0	equ	0xFEF
   678                           postinc0	equ	0xFEE
   679                           postdec0	equ	0xFED
   680                           preinc0	equ	0xFEC
   681                           plusw0	equ	0xFEB
   682                           fsr0h	equ	0xFEA
   683                           fsr0l	equ	0xFE9
   684                           wreg	equ	0xFE8
   685                           indf1	equ	0xFE7
   686                           postinc1	equ	0xFE6
   687                           postdec1	equ	0xFE5
   688                           preinc1	equ	0xFE4
   689                           plusw1	equ	0xFE3
   690                           fsr1h	equ	0xFE2
   691                           fsr1l	equ	0xFE1
   692                           bsr	equ	0xFE0
   693                           indf2	equ	0xFDF
   694                           postinc2	equ	0xFDE
   695                           postdec2	equ	0xFDD
   696                           preinc2	equ	0xFDC
   697                           plusw2	equ	0xFDB
   698                           fsr2h	equ	0xFDA
   699                           fsr2l	equ	0xFD9
   700                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      38
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    setMotorFullSpeed@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    setMotorFullSpeed@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    setMotorPWM@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    motorR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    S357DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    S357DC_motor$dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    motorL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_LEDout

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->i1_LEDout

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     242
                            _LEDInit
                             _LEDout
 ---------------------------------------------------------------------------------
 (1) _LEDout                                               5     3      2     242
                                             10 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LEDInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _InterruptHandlerLow                                  5     5      0     118
                                              5 COMRAM     5     5      0
                           i1_LEDout
 ---------------------------------------------------------------------------------
 (3) i1_LEDout                                             5     3      2     118
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEDInit
   _LEDout

 _InterruptHandlerLow (ROOT)
   i1_LEDout

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      F      26       1       40.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      26       3        0.0%
DATA                 0      0      26      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Nov 28 10:58:25 2019

                          bsr 000FE0                           l203 008E                           l205 009C  
                         l206 00DC                           l207 00DC                           l224 0122  
                         l227 01AC                           l947 018C                           u180 009C  
                         u181 0098                           wreg 000FE8               __end_of_LEDInit 01AE  
                        l1143 00E4                          l1171 00C2                          l1163 008A  
                        l1181 00CC                          l1173 00C4                          l1165 00BA  
                        l1183 00CE                          l1175 00C6                          l1167 00BE  
                        l1185 00D0                          l1177 00C8                          l1169 00C0  
                        l1179 00CA                          _LATB 000F8A                          _LATC 000F8B  
                        _LATD 000F8C                          _TMR1 000FCE                          _main 008A  
                        _left 0001                          btemp 0027                          start 0086  
                ___param_bank 000000                         ?_main 0017                         _PDC0H 000F78  
                       _PDC1H 000F76                         _PDC0L 000F79                         _PDC1L 000F77  
                       i1l224 0162                         i1l198 0076              __end_ofi1_LEDout 0164  
                       _RCREG 000FAE                         _SPBRG 000FAF                         _TXREG 000FAD  
                       _right 0003                         tablat 000FF5                         ttemp5 0028  
                       ttemp6 002B                         ttemp7 002F                         status 000FD8  
                       wtemp8 0028                  _TurningSpeed 0026               __initialization 0164  
                __end_of_main 00E4                __CFG_OSC$IRCIO 000000                        ??_main 0026  
               __activetblptr 000000                     ??_LEDInit 0021                        _CCPR1H 000FBF  
                      _CCPR1L 000FBE                        i1l1151 003C                        i1l1145 0124  
                      i1l1161 006C                        i1l1153 0048                        i1l1155 004A  
                      i1l1147 0026                        i1l1157 0058                        i1l1149 0034  
                      i1l1159 006A                        _LEDout 00E4                        _OSCCON 000FD3  
                      _PTCON0 000F7F                        _PTCON1 000F7E                        _SPBRGH 000FB0  
                      _PTPERH 000F7A                        _PTPERL 000F7B                        clear_0 017C  
                      _motorL 000E                        _motorR 0005                  __pdataCOMRAM 0026  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0060       __end_of__initialization 0182                 ___rparam_used 000001  
                   ?i1_LEDout 0017                __pcstackCOMRAM 0017   __end_of_InterruptHandlerLow 0086  
                     ?_LEDout 0021                    ??i1_LEDout 0019                       _LEDInit 018C  
                     i1u16_20 0034                       i1u16_21 0030                       i1u17_20 0058  
                     i1u17_21 0054                       _PWMCON0 000F6F                       _PWMCON1 000F6E  
             __size_of_LEDout 0040                       __Hparam 0000                       __Lparam 0000  
                     __pcinit 0164                       __ramtop 0300                       __ptext0 008A  
                     __ptext1 00E4                       __ptext2 018C                       __ptext4 0124  
                   _T1CONbits 000FCD          end_of_initialization 0182                     _RCSTAbits 000FAB  
                     postinc0 000FEE                  LEDout@number 0021                     _TRISAbits 000F92  
                   _TRISBbits 000F93                     _TRISCbits 000F94                     _TRISDbits 000F95  
                 _CCP1CONbits 000FBD                   _CCP2CONbits 000FBA                     _TXSTAbits 000FAC  
              __end_of_LEDout 0124             __size_ofi1_LEDout 0040                   _BAUDCONbits 000FAA  
               __pidataCOMRAM 01AE           start_initialization 0164                i1LEDout@number 0017  
                    ??_LEDout 0023                      ?_LEDInit 0017                   __pbssCOMRAM 0001  
__size_of_InterruptHandlerLow 006E                   __pintcodelo 0018                      _LATAbits 000F89  
                    _LATBbits 000F8A                      _LATCbits 000F8B                      _LATDbits 000F8C  
                    _PIE1bits 000F9D                      i1_LEDout 0124                      _PIR1bits 000F9E  
                    _RCONbits 000FD0              __size_of_LEDInit 0022                   _INTCON2bits 000FF1  
                    __Hrparam 0000                      __Lrparam 0000                 __size_of_main 005A  
                    int$flags 0027           _InterruptHandlerLow 0018                    _INTCONbits 000FF2  
                    intlevel1 0000          ?_InterruptHandlerLow 0017                    _OSCCONbits 000FD3  
       ??_InterruptHandlerLow 001C  
